# get the smallest prime factor
$(let pfactor_min $(func (m) (
    $(if $(leq $m 1) ($(return 1)))

    $(let p 2)
    $(let k $m)

    $(while 1 (
        $(if $(eq $(mod $k $p) 0) (
            $(return $p)
        ))
        $(let p $(add $p 1))
    ))
)))

# divide m by d continuously until not divisible
$(let div_cont $(func (m d) (
    $(if $(leq $d 1) (
        $(return $m)
    ))

    $(if $(eq $(mod $m $d) 0) (
        $(return $(div_cont $(div $m $d) $d))
    ))

    $(return $m)
)))

# print all the prime factors
$(let print_factors $(func (m) (
    $(let p $(pfactor_min $m))
    $(if $(leq $p 1) ($(return 0)))
    $(print $p)
    $(print ' ')
    $(print_factors $(div_cont $m $p))
)))

# input
$(let n $(to_int $(input 'Input n = ')))
$(print 'Prime factors: ')
$(print_factors $n)

